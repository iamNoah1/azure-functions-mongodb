# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '8fa0169e-dff0-4dda-89e4-0b6fabb38796'

  # Function app name
  functionAppName: 'BookReadingRepositoryNoi'

  # Agent VM image name
  vmImageName: 'vs2017-win2016'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/BookReadingRepository'


jobs:
- job: Build
  displayName: 'Unit tests, build and archive'
  pool:
    vmImage: $(vmImageName)

  steps:
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.sln'
      feedsToUse: 'select'
      vstsFeed: '86f41d1b-d3bf-45d4-b7b5-74afb83bee1c/51986b3a-cec9-4ea0-b981-37c12e2d9b2e'

  - task: DotNetCoreCLI@2
    displayName: Run unit Tests for BookReadingRepository
    inputs:
      command: 'test'
      projects: 'BookReadingRepositoryUnitTest'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: 'build'
      projects: |
        $(workingDirectory)/*.csproj
      arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

  - task: DotNetCoreCLI@2
    displayName: Run unit Tests for BookReadingRepository
    inputs:
      command: 'test'
      projects: 'BookReadingRepositoryUnitTest'

  - task: ArchiveFiles@2
    displayName: 'Archive files'
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
      includeRootFolder: false
      archiveType: zip
      archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      replaceExistingArchive: true

  - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    artifact: drop